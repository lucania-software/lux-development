@use "sass:map";
@use "root" as root;

/* Resets */

* {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
    appearance: none;
    -ms-appearance: none;
    -moz-appearance: none;
    -webkit-appearance: none;
}

html {
    height: 100%;
    background-color: var(--color-page-special);
    color: var(--color-text);
    font-family: var(--font-family-regular);
    scroll-behavior: smooth;
}

body {
    min-height: 100%;
    padding: 0;
    margin: 0;
}

header {
    border-top-left-radius: 0 !important;
    border-top-right-radius: 0 !important;
}

footer {
    border-bottom-left-radius: 0 !important;
    border-bottom-right-radius: 0 !important;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-family: var(--font-family-heading);
    color: var(--color-text-special);
}

label {
    user-select: none;
    font-size: var(--font-size-small);
}

a {
    color: var(--color-accent);
    text-decoration: none;
    transition-delay: 0ms;
    transition-duration: var(--hover-transition-duration);
    transition-property: color;
    transition-timing-function: ease;
}

a:hover {
    color: var(--color-accent-special);
}

img {
    width: 100%;
}

hr {
    display: block;
    width: 100%;
    height: 1px;
    background-color: var(--color-border);
    border: none;
}

ul,
ol {
    padding-left: var(--space-medium);
    list-style-position: inside;
}

/* Layout */

.stack {
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    justify-content: flex-start;
    align-items: stretch;
    align-content: flex-start;
    gap: var(--space-small);
}

.rack {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: flex-start;
    align-items: stretch;
    align-content: flex-start;
    gap: var(--space-small);
}

.row {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: start;
    align-items: stretch;
    align-content: stretch;
    gap: var(--space-small);
}

.column {
    flex: 1 1 0;
}

@each $alignment in root.$alignments {
    .align-#{$alignment} {
        align-items: $alignment;
    }
}

@each $justification in root.$justifications {
    .justify-#{$justification} {
        justify-content: $justification;
    }
}

@each $position in root.$positions {
    .position-#{$position} {
        position: $position;
    }
}

@each $display in root.$displays {
    .display-#{$display} {
        display: $display;
    }
}


.breathable {
    padding: var(--space-small);
}

.breathable-horizontal {
    padding: 0 var(--space-small) 0 var(--space-small);
}

.breathable-vertical {
    padding: var(--space-small) 0 var(--space-small) 0;
}

.no-gap {
    gap: 0;
}

.no-wrap {
    flex-wrap: nowrap;
}

.no-text-wrap {
    white-space: nowrap;
}

.input-container {
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    justify-content: flex-start;
    align-items: stretch;
    align-content: flex-start;
    gap: var(--space-smaller);
}

.checkbox-container,
.radio-container {
    display: grid;
    grid-template-columns: 0fr 1fr;
    align-items: center;
    justify-items: left;
    gap: var(--space-small);
}

.checkbox-container>label,
.radio-container>label,
.checkbox-container>input,
.radio-container>input {
    cursor: pointer;
}

// Tables

table {
    border-collapse: collapse;
    background-color: var(--color-input);
    border-radius: var(--border-radius);
}

table thead td,
table thead th,
table tfoot th,
table tfoot td {
    background-color: var(--color-accent);
    padding-left: var(--space-small);
    padding-right: var(--space-small);
    color: var(--color-page);
}

// table>*:first-child>tr:first-child>th:first-child,
// table>*:first-child>tr:first-child>td:first-child {
//     border-top-left-radius: var(--border-radius);
// }

// table>*:first-child tr:first-child>th:last-child,
// table>*:first-child tr:first-child>td:last-child {
//     border-top-right-radius: var(--border-radius);
// }

// table>*:last-child>tr:last-child>th:first-child,
// table>*:last-child>tr:last-child>td:first-child {
//     border-bottom-left-radius: var(--border-radius);
// }

// table>*:last-child>tr:last-child>th:last-child,
// table>*:last-child>tr:last-child>td:last-child {
//     border-bottom-right-radius: var(--border-radius);
// }

table th,
table td {
    padding: var(--space-smaller);
    text-align: center;
}

table tr:nth-child(odd) {
    background-color: var(--color-input-special);
}

.scrollable-table-container {
    position: relative;
    display: flex;
    flex-flow: column nowrap;
    align-items: stretch;
    justify-content: stretch;
    overflow: auto;
}

.scrollable-table-container>table>thead {
    position: sticky;
    top: 0;
}

.scrollable-table-container>table>tfoot {
    position: sticky;
    bottom: 0;
}

.force-border-radius {
    border-radius: var(--border-radius);
    overflow: hidden;
}

@each $size in root.$sizes {

    .width-#{$size} {
        width: var(--width-#{$size});
    }

    .maximum-width-#{$size} {
        max-width: var(--width-#{$size});
    }

    .minimum-width-#{$size} {
        min-width: var(--width-#{$size});
    }

    .height-#{$size} {
        height: var(--height-#{$size});
    }

    .maximum-height-#{$size} {
        max-height: var(--height-#{$size});
    }

    .minimum-height-#{$size} {
        min-height: var(--height-#{$size});
    }

    .maximum-height-#{$size} {
        max-height: var(--height-#{$size});
    }

    .weight-#{$size} {
        flex-grow: var(--weight-#{$size});
    }

    .font-size-#{$size} {
        font-size: var(--font-size-#{$size});
    }

    .font-weight-#{$size} {
        font-weight: var(--font-weight-#{$size});
    }

}

.width-full,
.expanding-width {
    width: 100%;
}

.height-full,
.expanding-height {
    height: 100%;
}

.contracting-width {
    width: 0;
}

.contracting-height {
    height: 0;
}

/* Scrolling */

@each $overflow in root.$overflows {

    .horizontal-overflow-#{$overflow} {
        overflow-x: $overflow;
    }

    .vertical-overflow-#{$overflow} {
        overflow-y: $overflow;
    }

}

.vertical-scroll-container {
    @extend .card;
    height: 0;
    flex-grow: 1;
    overflow-y: scroll;
}

/* Responsive */

@each $size in root.$sizes {

    .shown-under-#{$size}-width {
        display: none;
    }

    .shown-over-#{$size}-width {
        display: none;
    }

    @if map.get(root.$widths, $size) !=null {

        @media only screen and (max-width: map.get(root.$widths, $size)) {
            .to-column-under-#{$size}-width {
                flex-flow: column nowrap;
            }

            .to-row-under-#{$size}-width {
                flex-flow: row wrap;
            }

            .to-rack-under-#{$size}-width {
                flex-flow: row nowrap;
            }

            @each $alignment in root.$alignments {
                .align-#{$alignment}-under-#{$size}-width {
                    align-items: $alignment;
                }
            }

            @each $justification in root.$justifications {
                .justify-#{$justification}-under-#{$size}-width {
                    justify-content: $justification;
                }
            }

            .no-scroll-under-#{$size}-width {
                overflow-y: unset;
                min-height: auto;
                height: auto;
            }

            .hidden-under-#{$size}-width {
                display: none;
            }

            .shown-under-#{$size}-width {
                display: block;
            }
        }

        @media only screen and (min-width: map.get(root.$widths, $size)) {
            .to-column-over-#{$size}-width {
                flex-flow: column nowrap;
            }

            .to-row-over-#{$size}-width {
                flex-flow: row wrap;
            }

            .to-rack-over-#{$size}-width {
                flex-flow: row nowrap;
            }

            @each $alignment in root.$alignments {
                .align-#{$alignment}-over-#{$size}-width {
                    align-items: $alignment;
                }
            }

            @each $justification in root.$justifications {
                .justify-#{$justification}-over-#{$size}-width {
                    justify-content: $justification;
                }
            }

            .no-scroll-over-#{$size}-width {
                overflow-y: unset;
                min-height: auto;
                height: auto;
            }

            .hidden-over-#{$size}-width {
                display: none;
            }

            .shown-over-#{$size}-width {
                display: block;
            }
        }

    }

}

.hide-when-empty:empty {
    display: none;
}

/* Aesthetic */

.card {
    padding: var(--space-medium);
    border-radius: var(--border-radius);
    background-color: var(--color-page);
}

.card .card {
    border: var(--border);
}

@each $text-alignment in root.$text-alignments {

    .text-align-#{$text-alignment} {
        text-align: $text-alignment;
    }

}

.border {
    border: var(--border);
}

.border-none {
    border: none;
}

.border-radius {
    border-radius: var(--border-radius);
}

.border-radius-circle {
    border-radius: 50%;
}

/* Cursors */

@each $cursor in root.$cursors {

    .cursor-#{$cursor} {
        cursor: #{$cursor};
    }

}

/* Colors */

@each $color in root.$colors {

    .background-#{$color} {
        background-color: var(--#{$color});
    }

    .foreground-#{$color} {
        color: var(--#{$color});
    }

    .border-#{$color} {
        border-color: var(--#{$color});
    }

    .fill-#{$color} path {
        fill: var(--#{$color});
    }

}

@each $font-style in root.$font-styles {

    .font-style-#{$font-style} {
        font-style: $font-style;
    }

}

.text-decoration-none {
    text-decoration: none;
}

.text-decoration-underline {
    text-decoration: underline;
}

.text-decoration-overline {
    text-decoration: overline;
}

.text-decoration-error {
    text-decoration: underline wavy var(--color-negative);
}

/* Inputs */

input,
select,
textarea,
button {
    height: calc(var(--space-large)* 2);
    padding: var(--space-smaller);
    background-color: var(--color-input);
    color: var(--color-input-text);
    border: none;
    font-family: var(--font-family-regular);
    border-radius: var(--border-radius);
    transition-delay: 0ms;
    transition-duration: var(--hover-transition-duration);
    transition-property: background-color;
    transition-timing-function: ease;
    outline: none;
}

input:focus,
select:focus,
textarea:focus {
    background-color: var(--color-input-special);
}

input:disabled,
select:disabled,
textarea:disabled,
button:disabled {
    cursor: not-allowed;
    opacity: 0.75;
}

select::after {
    content: "Beans";
}

input[type=button],
input[type=reset],
input[type=submit],
button,
input[type=range]::-webkit-slider-thumb {
    background-color: var(--color-accent);
    color: var(--color-input-text-special);
    border: none;
    font-family: var(--font-family-regular);
    border-radius: var(--border-radius);
    font-weight: var(--font-weight-larger);
    cursor: pointer;
}

input[type=button],
input[type=reset],
input[type=submit],
button {
    @extend .rack;
    @extend .align-center;
    @extend .justify-center;
}

input[type=button]:not(:disabled):hover,
input[type=reset]:not(:disabled):hover,
input[type=submit]:not(:disabled):hover,
input[type=color]:not(:disabled):hover,
input[type=color]:not(:disabled):focus,
button:not(:disabled):hover,
input::-webkit-file-upload-button:not(:disabled):hover,
input::-webkit-file-upload-button:not(:disabled):hover,
input[type=range]::-webkit-slider-thumb:not(:disabled):hover {
    background-color: var(--color-accent-special);
}

input[type=checkbox],
input[type=radio] {
    width: var(--space-larger);
    height: var(--space-larger);
    cursor: pointer;
}

input[type=radio] {
    border-radius: 50%;
}

input[type=checkbox]:checked,
input[type=radio]:checked {
    position: relative;
    background-color: var(--color-accent);
}

input[type=checkbox]:not(.switch):checked::after {
    content: " ";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: var(--color-input-text-special);
    clip-path: polygon(40% 60%, 80% 0, 100% 20%, 40% 100%, 0 60%, 20% 40%);
    transform: scale(0.75);
}

input[type=checkbox]:not(.switch):checked::after {
    content: " ";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: var(--color-input-text-special);
    clip-path: polygon(40% 60%, 80% 0, 100% 20%, 40% 100%, 0 60%, 20% 40%);
    transform: scale(0.75);
}

input[type=color] {
    background-color: var(--color-input);
    width: 100%;
    cursor: pointer;
    padding: 0;
}

input[type=color]::-webkit-color-swatch-wrapper {
    padding: 0;
    margin: auto;
    width: calc(100% - calc(var(--space-medium) * 2));
    border: var(--border);
    border-color: var(--color-input);
}

input[type=color]::-webkit-color-swatch {
    border: none;
}

input::-webkit-calendar-picker-indicator {
    width: var(--space-large);
    height: var(--space-large);
    margin: 0;
    padding: 0;
    margin-right: var(--space-small);
    background: none;
    background-color: var(--color-accent);
    border-radius: 2px;
    transition-delay: 0;
    transition-duration: var(--hover-transition-duration);
    transition-property: background-color;
    transition-timing-function: ease;
    cursor: pointer;
    -webkit-appearance: none;
    clip-path: polygon(0 25%, 0 10%, 20% 10%, 20% 0, 35% 0, 35% 10%, 65% 10%, 65% 0, 80% 0, 80% 10%, 100% 10%, 100% 25%, 100% 35%, 0 35%, 0 60%, 15% 60%, 15% 45%, 85% 45%, 85% 60%, 0 60%, 0 100%, 100% 100%, 100% 35%, 100% 25%);;
}

input::-webkit-search-cancel-button {
    width: var(--space-medium);
    height: var(--space-medium);
    margin: 0;
    padding: 0;
    margin-right: var(--space-small);
    background: none;
    background-color: var(--color-accent);
    transition-delay: 0;
    transition-duration: var(--hover-transition-duration);
    transition-property: background-color;
    transition-timing-function: ease;
    cursor: pointer;
    clip-path: polygon(20% 0%, 0% 20%, 30% 50%, 0% 80%, 20% 100%, 50% 70%, 80% 100%, 100% 80%, 70% 50%, 100% 20%, 80% 0%, 50% 30%);
    -webkit-appearance: none;
}

input::-webkit-calendar-picker-indicator:hover,
input::-webkit-search-cancel-button:hover {
    background-color: var(--color-accent-special);
}

input[type=file] {
    padding: 0;
    cursor: pointer;
}

input[type=file]::file-selector-button {
    background-color: var(--color-accent);
    font-weight: var(--font-weight-large);
    color: var(--color-page);
    font-size: 1rem;
    height: 100%;
    border: none;
    outline: none;
    cursor: pointer;
}

input[type=file]::file-selector-button:hover {
    background-color: var(--color-accent-special);
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
    display: none;
}

input[type=range] {
    cursor: pointer;
    padding: 0;
}

input[type=range]::-webkit-slider-runnable-track {
    height: 100%;
    padding: 0;
    background-color: transparent;
}

input[type=range]::-webkit-slider-thumb {
    height: var(--input-size);
    width: var(--input-size);
    -webkit-appearance: none;
}

textarea {
    min-height: var(--input-size);
    resize: vertical;
}

::-webkit-resizer {
    background-color: var(--color-accent);
    border-top-left-radius: var(--border-radius);
    border-bottom-right-radius: var(--border-radius);
}

// Switch

input[type=checkbox].switch,
input[type=radio].switch {
    position: relative;
    border: none;
    background-color: var(--color-input);
    width: calc(var(--space-larger) * 3);
    cursor: pointer;
}

input[type=checkbox].switch::after,
input[type=radio].switch::after {
    content: "OFF";
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: var(--font-size-smaller);
    font-weight: var(--font-weight-large);
    color: var(--color-page);
    top: 0;
    left: 0;
    width: 50%;
    height: 100%;
    background-color: var(--color-negative);
    border-radius: var(--border-radius);
    border: none;
    transform: none;
}

input[type=checkbox].switch:checked::after,
input[type=radio].switch:checked::after {
    content: "ON";
    background-color: var(--color-accent);
    left: 50%;
}

// Loading Animation

.loading {
    position: relative;
    overflow: visible;
}

.loading::before {
    content: " ";
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-color: black;
    opacity: var(--translucent-opacity);
    border-radius: var(--border-radius);
    z-index: 150;
}

.loading:after {
    content: " ";
    position: absolute;
    width: var(--space-larger);
    height: var(--space-larger);
    top: calc(50% - var(--space-larger));
    left: calc(50% - var(--space-larger));
    border-radius: 50%;
    border: var(--space-small) solid var(--color-accent);
    border-color: transparent var(--color-accent) transparent var(--color-accent);
    animation: loading 1s ease-in-out infinite;
    z-index: 151;
}

.removed {
    display: none;
}

@keyframes loading {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(180deg);
    }
}

// Scrollbar

::-webkit-scrollbar {
    width: var(--space-small);
    height: var(--space-small);
}

::-webkit-scrollbar-track {
    background-color: var(--color-page-special);
}

::-webkit-scrollbar-corner {
    background-color: var(--color-page-special);
}

::-webkit-scrollbar-thumb {
    background-color: var(--color-accent-special);
}